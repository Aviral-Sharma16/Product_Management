import React, { useState, useEffect } from "react";
import ProductList from "./components/ProductList";
import ProductPicker from "./components/ProductPicker";
import VariantEditor from "./components/VariantEditor";

function App() {
  // Load products from localStorage if available
  const loadProducts = () => {
    const savedProducts = localStorage.getItem("products");
    return savedProducts ? JSON.parse(savedProducts) : [];
  };

  const [products, setProducts] = useState(loadProducts());
  const [showProductPicker, setShowProductPicker] = useState(false);
  const [showVariantEditor, setShowVariantEditor] = useState(false);
  const [selectedProductIndex, setSelectedProductIndex] = useState(null);
  const [selectedVariantIndex, setSelectedVariantIndex] = useState(null);
  const [mode, setMode] = useState("list");

  // Save products to localStorage whenever it changes
  useEffect(() => {
    localStorage.setItem("products", JSON.stringify(products));
  }, [products]);

  const handleAddProduct = () => {
    const newProduct = {
      id: Date.now(),
      title: "New Product",
      variants: [],
      image: { src: "" },
      discount: null,
    };
    setProducts((prevProducts) => [...prevProducts, newProduct]);
  };

  const handleEditProduct = (index) => {
    setSelectedProductIndex(index);
    setShowProductPicker(true);
    setMode("editProduct");
  };

  const handleEditVariants = (productId, variantId) => {
    const productIndex = products.findIndex((product) => product.id === productId);
    const variantIndex = products[productIndex].variants.findIndex((variant) => variant.id === variantId);
    setSelectedProductIndex(productIndex);
    setSelectedVariantIndex(variantIndex);
    setShowVariantEditor(true);
    setMode("editVariant");
  };

  const handleProductsSelected = (newProducts) => {
    const updatedProducts = [...products];
    updatedProducts.splice(selectedProductIndex, 1, ...newProducts);
    setProducts(updatedProducts);
    setShowProductPicker(false);
    setMode("list");
  };

  const handleApplyDiscount = (index, discount) => {
    const updatedProducts = [...products];
    updatedProducts[index] = {
      ...updatedProducts[index],
      discount,
    };
    setProducts(updatedProducts);
  };

  const handleReorderProducts = (reorderedProducts) => {
    setProducts(reorderedProducts);
  };

  return (
    <div>
      <header style={headerStyle}>
        <img
          src="data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20viewBox%3D%220%200%2045%2045%22%3E%3Cpath%20d%3D%22M%202%2045%20C%200.895%2045%200%2045%200%2045%20L%200%200%20C%200%200%200.895%200%202%200%20L%2043%200%20C%2044.105%200%2045%200%2045%200%20L%2045%2045%20C%2045%2045%2044.105%2045%2043%2045%20Z%22%20fill%3D%22rgb(252%2C65%2C75)%22%3E%3C%2Fpath%3E%3Cpath%20d%3D%22M%2036.327%2018.605%20C%2036.365%2018.202%2036.388%2017.796%2036.388%2017.384%20C%2036.388%209.992%2029.976%204%2022.065%204%20C%2016.008%204%2010.829%207.512%208.735%2012.476%20C%208.735%2012.479%208.735%2012.482%208.735%2012.485%20C%208.153%2013.969%207.854%2015.549%207.856%2017.142%20L%207.856%2018.388%20L%207.789%2018.401%20C%207.795%2018.469%207.801%2018.537%207.807%2018.605%20C%207.002%2018.742%206.247%2019.091%205.619%2019.615%20C%204.992%2020.139%204.515%2020.82%204.236%2021.588%20C%204.236%2021.588%204.236%2021.593%204.236%2021.595%20C%204.08%2022.08%204%2022.587%204%2023.097%20C%204%2025.62%205.894%2027.678%208.295%2027.867%20C%208.857%2031.228%2010.561%2034.291%2013.12%2036.542%20C%2015.209%2038.382%2017.799%2039.558%2020.559%2039.918%20L%2020.614%2039.925%20C%2022.512%2040.124%2024.43%2039.927%2026.248%2039.346%20C%2028.066%2038.765%2029.744%2037.814%2031.175%2036.551%20C%2033.703%2034.329%2035.387%2031.303%2035.943%2027.983%20C%2036.091%2027.972%2036.237%2027.953%2036.38%2027.927%20C%2036.38%2027.908%2036.387%2027.889%2036.391%2027.869%20C%2036.571%2027.855%2036.75%2027.83%2036.927%2027.794%20C%2038.813%2027.208%2040.186%2025.406%2040.186%2023.268%20C%2040.193%2020.909%2038.516%2018.962%2036.327%2018.605%20Z%20M%2023.585%208.038%20C%2023.731%208.034%2023.875%208.073%2023.998%208.151%20C%2024.122%208.229%2024.219%208.342%2024.278%208.476%20C%2024.337%208.61%2024.355%208.758%2024.329%208.901%20C%2024.303%209.045%2024.235%209.178%2024.133%209.283%20C%2024.032%209.387%2023.901%209.459%2023.758%209.49%20C%2023.615%209.52%2023.467%209.506%2023.331%209.452%20C%2023.196%209.397%2023.08%209.303%2022.999%209.182%20C%2022.917%209.061%2022.873%208.918%2022.873%208.772%20C%2022.87%208.58%2022.944%208.396%2023.077%208.258%20C%2023.211%208.12%2023.393%208.041%2023.585%208.038%20Z%20M%2023.585%2010.483%20C%2023.731%2010.479%2023.875%2010.518%2023.998%2010.596%20C%2024.122%2010.674%2024.219%2010.787%2024.278%2010.921%20C%2024.337%2011.055%2024.355%2011.203%2024.329%2011.346%20C%2024.303%2011.49%2024.235%2011.623%2024.133%2011.728%20C%2024.032%2011.832%2023.901%2011.904%2023.758%2011.934%20C%2023.615%2011.965%2023.467%2011.951%2023.331%2011.897%20C%2023.196%2011.842%2023.08%2011.748%2022.999%2011.627%20C%2022.917%2011.506%2022.873%2011.363%2022.873%2011.217%20C%2022.87%2011.025%2022.944%2010.84%2023.077%2010.703%20C%2023.211%2010.565%2023.393%2010.486%2023.585%2010.483%20Z%20M%2023.585%2012.928%20C%2023.731%2012.924%2023.875%2012.963%2023.998%2013.041%20C%2024.122%2013.119%2024.219%2013.232%2024.278%2013.366%20C%2024.337%2013.5%2024.355%2013.648%2024.329%2013.791%20C%2024.303%2013.935%2024.235%2014.068%2024.133%2014.173%20C%2024.032%2014.277%2023.901%2014.349%2023.758%2014.38%20C%2023.615%2014.41%2023.467%2014.396%2023.331%2014.342%20C%2023.196%2014.287%2023.08%2014.193%2022.999%2014.072%20C%2022.917%2013.951%2022.873%2013.808%2022.873%2013.662%20C%2022.87%2013.47%2022.944%2013.285%2023.077%2013.148%20C%2023.211%2013.01%2023.393%2012.931%2023.585%2012.928%20Z%20M%2020.74%208.038%20C%2020.886%208.034%2021.03%208.073%2021.153%208.15%20C%2021.277%208.228%2021.375%208.341%2021.434%208.475%20C%2021.493%208.608%2021.511%208.756%2021.485%208.9%20C%2021.46%209.044%2021.392%209.177%2021.29%209.282%20C%2021.189%209.387%2021.058%209.459%2020.915%209.489%20C%2020.772%209.52%2020.624%209.507%2020.488%209.452%20C%2020.353%209.397%2020.237%209.303%2020.155%209.182%20C%2020.073%209.061%2020.03%208.918%2020.03%208.772%20C%2020.027%208.581%2020.1%208.396%2020.233%208.259%20C%2020.366%208.121%2020.548%208.042%2020.74%208.038%20Z%20M%2020.74%2010.483%20C%2020.886%2010.479%2021.03%2010.518%2021.153%2010.595%20C%2021.277%2010.673%2021.375%2010.786%2021.434%2010.92%20C%2021.493%2011.053%2021.511%2011.201%2021.485%2011.345%20C%2021.46%2011.489%2021.392%2011.622%2021.29%2011.727%20C%2021.189%2011.832%2021.058%2011.904%2020.915%2011.934%20C%2020.772%2011.965%2020.624%2011.951%2020.488%2011.897%20C%2020.353%2011.842%2020.237%2011.748%2020.155%2011.627%20C%2020.073%2011.506%2020.03%2011.363%2020.03%2011.217%20C%2020.027%2011.026%2020.1%2010.841%2020.233%2010.704%20C%2020.366%2010.566%2020.548%2010.487%2020.74%2010.483%20Z%20M%2020.74%2012.928%20C%2020.885%2012.924%2021.029%2012.963%2021.153%2013.041%20C%2021.276%2013.119%2021.374%2013.232%2021.433%2013.366%20C%2021.491%2013.5%2021.509%2013.648%2021.483%2013.791%20C%2021.457%2013.935%2021.389%2014.068%2021.288%2014.173%20C%2021.186%2014.277%2021.055%2014.349%2020.912%2014.38%20C%2020.77%2014.41%2020.621%2014.396%2020.486%2014.342%20C%2020.35%2014.287%2020.235%2014.193%2020.153%2014.072%20C%2020.071%2013.951%2020.028%2013.808%2020.028%2013.662%20C%2020.025%2013.47%2020.098%2013.285%2020.232%2013.148%20C%2020.365%2013.01%2020.548%2012.931%2020.74%2012.928%20Z%20M%2013.052%2021.095%20C%2012.988%2021.163%2012.9%2021.204%2012.807%2021.209%20C%2012.714%2021.214%2012.622%2021.183%2012.551%2021.123%20C%2012.479%2021.062%2012.434%2020.976%2012.425%2020.884%20C%2012.415%2020.791%2012.441%2020.697%2012.498%2020.623%20C%2012.572%2020.537%2014.29%2018.538%2016.491%2018.538%20L%2016.627%2018.538%20C%2017.891%2018.585%2019.029%2019.292%2020.01%2020.642%20C%2020.049%2020.696%2020.072%2020.76%2020.078%2020.827%20C%2020.083%2020.893%2020.07%2020.96%2020.039%2021.02%20C%2020.009%2021.079%2019.963%2021.129%2019.906%2021.164%20C%2019.849%2021.199%2019.784%2021.218%2019.717%2021.218%20C%2019.66%2021.218%2019.604%2021.205%2019.552%2021.179%20C%2019.501%2021.153%2019.457%2021.116%2019.423%2021.069%20C%2018.58%2019.911%2017.632%2019.302%2016.603%2019.263%20C%2014.698%2019.197%2013.07%2021.076%2013.052%2021.095%20Z%20M%2021.953%2034.823%20C%2019.219%2034.823%2017.003%2032.538%2017.003%2029.731%20C%2017.007%2029.638%2017.048%2029.551%2017.115%2029.486%20C%2017.183%2029.422%2017.272%2029.387%2017.365%2029.387%20C%2017.458%2029.387%2017.548%2029.422%2017.615%2029.486%20C%2017.683%2029.551%2017.723%2029.638%2017.728%2029.731%20C%2017.728%2032.14%2019.624%2034.099%2021.953%2034.099%20C%2024.282%2034.099%2026.178%2032.14%2026.178%2029.731%20C%2026.178%2029.635%2026.216%2029.542%2026.284%2029.474%20C%2026.353%2029.406%2026.445%2029.368%2026.541%2029.368%20C%2026.637%2029.368%2026.73%2029.406%2026.798%2029.474%20C%2026.866%2029.542%2026.904%2029.635%2026.904%2029.731%20C%2026.904%2032.538%2024.683%2034.823%2021.953%2034.823%20Z%20M%2031.677%2021.151%20C%2031.615%2021.195%2031.541%2021.219%2031.465%2021.219%20C%2031.408%2021.219%2031.352%2021.206%2031.301%2021.18%20C%2031.25%2021.154%2031.205%2021.117%2031.172%2021.07%20C%2030.328%2019.911%2029.38%2019.303%2028.348%2019.264%20C%2026.44%2019.194%2024.817%2021.072%2024.801%2021.091%20C%2024.737%2021.159%2024.649%2021.2%2024.555%2021.205%20C%2024.462%2021.211%2024.37%2021.18%2024.299%2021.119%20C%2024.228%2021.058%2024.183%2020.973%2024.173%2020.88%20C%2024.164%2020.787%2024.19%2020.694%2024.247%2020.62%20C%2024.322%2020.531%2026.105%2018.451%2028.375%2018.537%20C%2029.639%2018.584%2030.777%2019.291%2031.758%2020.641%20C%2031.787%2020.68%2031.807%2020.724%2031.819%2020.771%20C%2031.83%2020.818%2031.832%2020.866%2031.824%2020.913%20C%2031.817%2020.961%2031.8%2021.006%2031.775%2021.047%20C%2031.749%2021.088%2031.716%2021.124%2031.677%2021.152%20Z%22%20fill%3D%22rgb(255%2C232%2C136)%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E"
          alt="Monk Logo"
          style={logoStyle}
        />
        <h1 style={headerTitle}>Monk Upsell & Cross-sell</h1>
      </header>

      
      <main>
      
        <button onClick={handleAddProduct}>Add Product</button>
        <ProductList
          products={products}
          onEditProduct={handleEditProduct}
          onRemoveProduct={(index) => setProducts(products.filter((_, i) => i !== index))}
          onApplyDiscount={handleApplyDiscount}
          onReorderProducts={handleReorderProducts}
        />
        {showProductPicker && mode === "editProduct" && (
          <ProductPicker
            onClose={() => {
              setShowProductPicker(false);
              setMode("list");
            }}
            onProductsSelected={handleProductsSelected}
          />
        )}
        {showVariantEditor && mode === "editVariant" && (
          <VariantEditor
            product={products[selectedProductIndex]}
            variant={products[selectedProductIndex].variants[selectedVariantIndex]}
            onClose={() => {
              setShowVariantEditor(false);
              setMode("list");
            }}
          />
        )}
      </main>
    </div>
  );
}

// Styles for Header
const headerStyle = {
  display: "flex",
  alignItems: "center",
  //backgroundColor: "#f5f5f5",
  padding: "10px 20px",
  borderBottom: "2px solid #ddd",
};

const logoStyle = {
  width: "40px",
  height: "40px",
  marginRight: "10px",
};

const headerTitle = {
  margin: 0,
  fontSize: "30px",
  fontWeight: "bold",
  color: "#333",
};

export default App;